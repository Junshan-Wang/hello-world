#include <iostream>
using namespace std;
int use[42][42]={0},flag[42][42]={0},s=0;
void f(int n)
{
	int i,j,k,l;
	for (i=11;i<=18;i++)
	{
		if (use[i][n]==0) 
		{ 
			flag[i][n]=1;
			for (j=11;j<=18;j++) use[i][j]++;
			for (j=1;j<8;j++) {use[i-j][n-j]++;use[i+j][n+j]++;use[i-j][n+j]++;use[i+j][n-j]++;}
			if (n<18) f(n+1);
			else if (n==18)
			{
				s++;
				cout<<s<<endl;
				for (k=11;k<=18;k++) for (l=11;l<=18;l++)
				{
					if (flag[k][l]==0) cout<<".";
					else cout<<"*";
					if (l<18) cout<<" ";
					else cout<<endl;
				}
			}
			flag[i][n]=0;
			for (j=11;j<=18;j++) use[i][j]--;
		    for (j=1;j<8;j++) {use[i-j][n-j]--;use[i+j][n+j]--;use[i-j][n+j]--;use[i+j][n-j]--;}
		}
	}
}
	

int main()
{
	f(11);
	return 0;
}



八皇后问题	
来源	chg
描述
会下国际象棋的人都很清楚：皇后可以在横、竖、斜线上不限步数地吃掉其他棋子。如何将8个皇后放在棋盘上（有8 * 8个方格），使它们谁也不能被吃掉！即任何两个皇后都不会在同一行、同一列、或同一斜线上。这就是著名的八皇后问题。 
关于输入
本题没有输入
关于输出
输出八皇后问题所有的解，解用一个 8*8 的字符方正表示，如果某个位置没有皇后，则对应的字符为“.”，如果有皇后，则对应的字符为“*”。为了美观起见，同一行的两个字符之间有一个空格，解的前一行是一个数字，表示这个解的序号。（详见例子输出）解要按照皇后在第 1 列、第 2 列……第 8 列出现的行数从小到大依次排序。